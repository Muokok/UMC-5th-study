name: UMC Dev CI/CD

on:
  pull_request:
    types: [closed] # 풀리퀘가 닫혔을 때 즉, 머지가 됐다면
  workflow_dispatch: # (2).수동 실행도 가능하도록

jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop' # 머지가 된 대상이 develop이라면 해라

    # 이 설정 파일은 줄바꿈도 주의해야 한다.
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # (4).코드 check out

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17  # (5).자바 설치
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash     # (6).권한 부여 >> 리눅스 명령어다

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash   # (7).build시작 >> 리눅스 명령어다. 6,7번 내용은 어지간해서 바뀌지 않는다.

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"   # (8).build시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash     # (9).확보한 시간 보여주기

      - name: Generate deployment package # 여기가 중요하다.
        run: |
            mkdir -p deploy
            cp build/libs/*.jar deploy/application.jar
            cp Procfile deploy/Procfile
            cp -r .ebextensions-dev deploy/.ebextensions
            cp -r .platform deploy/.platform
            cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: umc
          environment_name: Umc-dev-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-1
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false

